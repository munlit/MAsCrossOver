// ╔═══════════════════════════════════════╗
// ║  @Ultr                                ║
// ║  Multi Moving Averages & CrossOver    ║
// ╚═══════════════════════════════════════╝

//@version=5
indicator("Multi Moving Average & CrossOver (@Ultr)", shorttitle = "MAs CrossOver(@Ultr.)", overlay = true)

//  ═════════
//  Multi CMA
//  Constants
//  ═════════

// Color
// Standard Colors
//  colorAqua    = color.aqua      // #00BCD4  Aqua
//  colorBlue    = color.blue      // #2196F3  Blue
//  colorTeal    = color.teal      // #00897B  Teal
//  colorGreen   = color.green     // #4CAF50  Green
//  colorOlive   = color.olive     // #808000  Olive
//  colorLime    = color.lime      // #00E676  Lime
//  colorYellow  = color.yellow    // #FFEB3B  Yellow
//  colorOrange  = color.orange    // #FF9800  Orange
//  colorMaroon  = color.maroon    // #880E4F  Maroon
//  colorRed     = color.red       // #FF5252  Red
//  colorFuchsia = color.fuchsia   // #E040FB  Fuchsia
//  colorPurple  = color.purple    // #9C27B0  Purple
//  colorNavy    = color.navy      // #311B92  Navy
//  colorBlack   = color.black     // #363A45  Black
//  colorGray    = color.gray      // #787B86  Gray
//  colorSilver  = color.silver    // #B2B5BE  Silver
//  colorWhite   = color.white     // #FFFFFF  White

length = (10)
transpar = (100)

color colorZero = color.new(#e91e63, na)  // color Amarillo #eedd45
color colorFirs = color.new(#33ffac, na)  // color Menta	#33ffac
color colorSeco = color.new(#eedd45, na)  // color Fucxia	#e91e63
color colorThir = color.new(#0034c5, na)  // color Azul		#0034c5
color colorCuar = color.new(#00ffd5, na)  // color Gris		#9598a1   #00ffd5
color colorFift = color.new(#e65100, na)  // color Naranja	#e65100

color colorBuy  = color.new(#33ffac, 85)
color colorSell = color.new(#e91e63, 85)

//  ═════════
//  Multi CMA
//  Inputs - Options
//  ════════════════

string optionMa	= input.string("SMA", "Tipo de MM", options = ["EMA", "SMA", "RMA", "WMA", "VWMA"])

//  ═════════
//  Multi CMA
//  Functions
//  ══════

ma(source, length, type) =>
    type == "SMA" ? ta.sma(source, length) :    // Media Movil Simple
     type == "EMA" ? ta.ema(source, length) :   // Media Movil Exponencial
     type == "RMA" ? ta.rma(source, length) :   // Media Movil
     type == "WMA" ? ta.wma(source, length) :   // Media Movil Ponderada
     type == "VWMA" ? ta.vwma(source, length) : // Media Movil Ponderada por volumen
     na

//  ═════════
//  Multi CMA
//  Instancias
//  ══════════

ma8  = ma(close, length-2, optionMa)
ma10 = ma(close, length, optionMa)
ma13 = ma(close, length+3, optionMa)
ma20 = ma(close, length*2, optionMa)
ma21 = ma(close, length+11, optionMa)
ma30 = ma(close, length*3, optionMa)
ma34 = ma(close, length+3+4, optionMa)
ma40 = ma(close, length*4, optionMa)
ma50 = ma(close, length*5, optionMa)
ma55 = ma(close, length*5+5, optionMa)
ma100 = ma(close, length*10, optionMa)
ma200 = ma(close, length*20, optionMa)

//  ═════════
//  Multi CMA
//  Display
//  ═══════

//  plot(ma8,  "MA 8",  colorZero, linewidth = 1)
//  plot(ma21, "MA 21", colorFirs, linewidth = 1)
//  plot(ma55, "MA 55", colorSeco, linewidth = 1)
plot(ma100, "MA 100", color.new(color.aqua, 80), linewidth = 2)
plot(ma200, "MA 200", color.new(color.blue, 90), linewidth = 2, style = plot.style_area)

maPlot8  = plot(ma8,  "MA 8",  editable=false, color = na)
maPlot10 = plot(ma10, "MA 10", editable=false, color = na)
maPlot13 = plot(ma13, "MA 13", editable=false, color = na)
maPlot20 = plot(ma20, "MA 20", editable=false, color = na)
maPlot21 = plot(ma21, "MA 21", editable=false, color = na)
maPlot30 = plot(ma30, "MA 30", editable=false, color = na)
maPlot34 = plot(ma34, "MA 34", editable=false, color = na)
maPlot40 = plot(ma40, "MA 40", editable=false, color = na)
maPlot50 = plot(ma50, "MA 50", editable=false, color = na)
maPlot55 = plot(ma55, "MA 55", editable=false, color = na)

//  ═════════
//  Multi CMA
//  CrossOver
//  ═════════

// CrossOver shadow
// 8 MA
color maCrossOver8 = ma8 > ma13 ? colorBuy : colorSell
fill(maPlot8, maPlot13, maCrossOver8, "CrossOver 13")
// 20 MA
color maCrossOver20 = ma8 > ma20 ? colorBuy : colorSell
fill(maPlot8, maPlot20, maCrossOver20, "CrossOver 20")
// 30 MA
color maCrossOver30 = ma8 > ma30 ? colorBuy : colorSell
fill(maPlot8, maPlot30, maCrossOver30, "CrossOver 30")
// 40 MA
color maCrossOver40 = ma8 > ma40 ? colorBuy : colorSell
fill(maPlot8, maPlot40, maCrossOver40, "CrossOver 40")
// 55 MA
color maCrossOver55 = ma8 > ma55 ? colorBuy : colorSell
fill(maPlot8, maPlot55, maCrossOver55, "CrossOver 55")

// CrossOver Line
bool maRising  = ta.rising(ma10, 1)
color crossMa = maRising ? color.new(colorBuy, transpar-60) : color.new(colorSell, transpar-60)
plot(ma21, "Operativa", crossMa, 4)

//  Degradado

//  float maHeight = ta.percentrank(ma21, 100)
//  float transparency = math.min(80, 100 - maHeight)

//  MA degradado
//  plot(ma, "Degradado", color.new(colorFirs, transparency), 2)

//  Marcas Operativas
//  buyCond = ta.crossover(ma10, ma21)
//  sellCond = ta.crossunder(ma10, ma21)

//  plotshape(series = buyCond, title = "Compra", style = shape.triangleup, location = location.belowbar, color = colorBuy, text = "Buy", size = size.tiny)
//  plotshape(series = sellCond, title = "Venta", style = shape.triangledown, location = location.abovebar, color = colorSell, text = "Sell", size = size.tiny)
